name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_REPO }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          TAG=${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}
          docker build -t $IMAGE_NAME:$TAG .

      - name: Push Docker Image
        run: |
          TAG=${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}
          docker push $IMAGE_NAME:$TAG

  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Setup SSH for Dev
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEV_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Dev
        run: |
          ssh ${{ secrets.DEV_USER }}@${{ secrets.DEV_HOST }} << EOF
            docker pull ${{ secrets.DOCKER_REPO }}:dev
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 3000:3000 ${{ secrets.DOCKER_REPO }}:dev
          EOF

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Setup SSH for Prod
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Prod
        run: |
          ssh ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} << EOF
            docker pull ${{ secrets.DOCKER_REPO }}:latest
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 3000:3000 ${{ secrets.DOCKER_REPO }}:latest
          EOF
